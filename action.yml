name: "CalVer to SemVer Release"
description: "Computes SemVer release values for a repository based upon a number of existing CalVer's."
inputs:
  calver:
    description: "Current CalVer"
    required: true
  count-calver:
    description: "Total number of existing CalVer's"
    required: true
  owner:
    description: "Owner of repository targeted for SemVer release"
    required: true
  repo:
    description: "Name of repository targeted for SemVer release"
    required: true
outputs:
  semver:
    description: "Computed SemVer"
    value: ${{ steps.format-results.outputs.semver }}
  notes:
    description: "Computed notes"
    value: ${{ steps.format-results.outputs.notes }}
runs:
  using: "composite"
  steps:
    - name: Get latest release for targeted repository
      id: get-latest-release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: ${{ inputs.owner }}
        repo: ${{ inputs.repo }}
        excludes: prerelease, draft

    - name: Parse latest release for targeted repository
      id: get-latest-release-parsed
      uses: booxmedialtd/ws-action-parse-semver@v1
      with:
        input_string: ${{ steps.get-latest-release.outputs.release }}

    - name: Output SemVer release values
      id: format-results
      run: |
        echo "::set-output name=semver::1.${{ inputs.count-calver }}.$(if [[ ${{ inputs.count-calver }} -eq ${{ steps.get-latest-release-parsed.outputs.minor }} ]]; then echo $(expr ${{ steps.get-latest-release-parsed.outputs.patch }} + 1); else echo 0; fi)"
        echo "::set-output name=notes::$(if [[ ${{ inputs.count-calver }} -eq ${{ steps.get-latest-release-parsed.outputs.minor }} ]]; then echo Made minor changes for ${{ inputs.calver }}; else echo Made major changes for ${{ inputs.calver }}; fi)"
      shell: bash
